name: SonarQube Analysis

on:
  push:
    branches:
      - master  # or the branch you want to run the analysis on
  pull_request:
    branches:
      - master  # or the branch you want to run the analysis on

jobs:
  sonarQube:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin' # or 'adopt'
        java-version: '11'
    - name: Build with Maven
      run: mvn compile
      
    - name: Cache SonarQube dependencies
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-${{ hashFiles('**/sonar-project.properties') }}
        restore-keys: |
          ${{ runner.os }}-sonar-

    # - name: Install dependencies (Maven)
    #   run: mvn clean install

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Install dependencies and run tests (Maven)
      run: mvn clean verify -Pcoverage

    # - name: Run Tests with JaCoCo (Code Coverage)
    #   run: mvn test
    - name: Build and run tests with Maven and SonarQube
      run: mvn clean install \
        -Dsonar.projectKey=adityaraj270392_hello-world-java \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }} \
        -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
         org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
    # - name: SonarQube Scan
    #   uses: sonarsource/sonarcloud-github-action@v2
    #   with:
    #     projectBaseDir: .
    #     args: >
    #       -Dsonar.organization=adityaraj270392
    #       -Dsonar.projectKey=adityaraj270392_hello-world-java
    #       -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
    #       -Dsonar.login=${{ secrets.SONAR_TOKEN }}
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_SCANNER_OPTS: '-Dsonar.java.binaries=target/classes'
      
